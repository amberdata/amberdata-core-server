/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.amberdata.api;

import io.amberdata.model.Blockchain;
import io.amberdata.model.Blockchain1;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-09-08T19:03:46.332-05:00")

@Api(value = "blockchains", description = "the blockchains API")
public interface BlockchainsApi {

    @ApiOperation(value = "", nickname = "blockchainsGet", notes = "Fetch all blockchains for a user", tags={ "Blockchains", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns a single block"),
        @ApiResponse(code = 401, message = "Unauthorized") })
    @RequestMapping(value = "/blockchains",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<Void> blockchainsGet();


    @ApiOperation(value = "", nickname = "blockchainsIdDelete", notes = "Remove a single blockchain", authorizations = {
        @Authorization(value = "Authorization")
    }, tags={ "Blockchains", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Removed a blockchain"),
        @ApiResponse(code = 401, message = "Unauthorized") })
    @RequestMapping(value = "/blockchains/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> blockchainsIdDelete(@ApiParam(value = "The blockchain id",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "", nickname = "blockchainsIdGet", notes = "Fetch a single blockchain", tags={ "Blockchains", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns a single block"),
        @ApiResponse(code = 401, message = "Unauthorized") })
    @RequestMapping(value = "/blockchains/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<Void> blockchainsIdGet(@ApiParam(value = "The blockchain id",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "", nickname = "blockchainsIdPatch", notes = "Update a single blockchain", authorizations = {
        @Authorization(value = "Authorization")
    }, tags={ "Blockchains", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Updated a blockchain"),
        @ApiResponse(code = 401, message = "Unauthorized") })
    @RequestMapping(value = "/blockchains/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PATCH)
    ResponseEntity<Void> blockchainsIdPatch(@ApiParam(value = "The blockchain id",required=true) @PathVariable("id") String id,@ApiParam(value = "Specify some blockchain object data"  )  @Valid @RequestBody Blockchain1 blockchain);


    @ApiOperation(value = "", nickname = "blockchainsPost", notes = "Add a new blockchain to amberdata indexing", authorizations = {
        @Authorization(value = "Authorization")
    }, tags={ "Blockchains", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns success") })
    @RequestMapping(value = "/blockchains",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> blockchainsPost(@ApiParam(value = "Specify an entire blockchain object"  )  @Valid @RequestBody Blockchain blockchain);

}
